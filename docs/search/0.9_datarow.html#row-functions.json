{"objectID":"0.9_datarow.html#row-functions","parent":"0.9_datarow.html","pageViews":0,"url":"https://kotlin.github.io/dataframe///datarow.html#row-functions","version":"0.9","product":"","headings":"Row functions","content":"index(): Int - sequential row number in DataFrame , starts from 0 prev(): DataRow? - previous row ( null for the first row) next(): DataRow? - next row ( null for the last row) diff { rowExpression }: T - difference between results of row expression calculated for current and previous rows values(): List\u003cAny?\u003e - list of all cell values from the current row valuesOf\u003cT\u003e(): List\u003cT\u003e - list of values of given type columnNames(): List\u003cString\u003e - list of all column names namedValues(): List\u003cNameValuePair\u003cAny?\u003e\u003e - list of name-value pairs where name is a column name and value is cell value namedValuesOf\u003cT\u003e(): List\u003cNameValuePair\u003cT\u003e\u003e - list of name-value pairs where value has given type getRow(Int): DataRow - row from DataFrame by row index near(Iterable\u003cInt\u003e): Sequence\u003cDataRow\u003e - sequence of the nearest rows by relative index: near(-1..1) will return previous, current and next row. Requested indices will be coerced to valid range and invalid indices will be skipped rows(Iterable\u003cInt\u003e): Sequence\u003cDataRow\u003e - sequence of the rows by absolute index. Requested indices are not coerced to valid boundaries and you should care about it get(column): T - cell value by this row and given column df() - DataFrame that current row belongs to","pageTitle":"DataRow","metaDescription":"","type":"Documentation","breadcrumbs":"types.md|Types"}